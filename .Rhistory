MainTable$any_diabetes
VarDescription[VarDescription$category=="disease",]
VarDescription[VarDescription$category=="disease","var"]
table(VarDescription[VarDescription$category=="disease","var"])
ls()
vars <- c(description_nutrients$var, "male", "education",
"colon_cancer_self_report", "any_ht")
nutrients <- MainTable[, ]
head(nutriens)
head(nutrients)
nutrients <- MainTable[,vars]
head(nutrients)
complete.cases(nutrients[,1:31])
sum(complete.cases(nutrients[,1:31]))
sum(complete.cases(nutrients[,32:ncol(nutrients)]))
apply(nutrients[,1:31], 2, function(x) sum(is.na(x)))
dim(nutrients)
apply(nutrients[,1:31], 2, function(x) mean(is.na(x))>0.6)
sum(apply(nutrients[,1:31], 2, function(x) mean(is.na(x))>0.6))
sum(complete.cases(nutrients[,32:ncol(nutrients)]))
bd <- nutrients[complete.cases(nutrients[,32:ncol(nutrients)]),]
dim(bd)
sum(apply(bd[,1:31], 2, function(x) mean(is.na(x))>0.6))
VarDescription$category
table(VarDescription$category)
VarDescription[VarDescription$category=="body measures",]
table(VarDescription$category)
VarDescription[VarDescription$category=="volatile compounds",]
air <- unique(VarDescription[VarDescription$category=="volatile compounds", "var"])
air
nut <- unique(VarDescription[VarDescription$category=="nutrients", "var"])
air <- unique(VarDescription[VarDescription$category=="volatile compounds", "var"])
vars <- c(air, nut, "male", "education",
"BMXBMI", "age"
"colon_cancer_self_report", "any_ht")
vars <- c(air, nut, "male", "education",
"BMXBMI", "age",
"colon_cancer_self_report", "any_ht")
nutrients <- MainTable[,vars]
names(MainTable)
names(MainTable)[1:10]
names(MainTable)[1:20]
MainTable$RIDAGEYR
hist(MainTable$RIDAGEYR)
nut <- unique(VarDescription[VarDescription$category=="nutrients", "var"])
air <- unique(VarDescription[VarDescription$category=="volatile compounds", "var"])
vars <- c(air, nut, "male", "education",
"BMXBMI", "RIDAGEYR",
"colon_cancer_self_report", "any_ht")
nutrients <- MainTable[,vars]
bd <- nutrients[complete.cases(nutrients[,32:ncol(nutrients)]),]
MainTable$any_diabetes
dim(bd)
bd <- MainTable[,vars]
dim(bd)
dim(bd)
names(bd)
complete.cases(bd[,87:88])
sum(complete.cases(bd[,87:88]))
apply(bd[,1:84]), 2, function(x) sum(is.na(x))))
apply(bd[,1:84]), 2, function(x) sum(is.na(x)))
apply(bd[,1:84], 2, function(x) sum(is.na(x)))
apply(bd[,1:84], 2, function(x) mean(is.na(x)))
apply(bd[complete.cases(bd[,87:88]),1:84], 2, function(x) mean(is.na(x)))
library(mice)
ls(2)
args(mice)
bd.i <- mice(bd, m=1, method="pmm")
set.seed(12345)
bd.i <- mice(bd, m=1, method="pmm")
nhanes <- bd.i
save(nhanes, file="nhanes.Rdata")
dim(nhanes)
names(nhanes)
dim(nhanes$data)
nhanes <- bd.i$data
save(nhanes, file="nhanes.Rdata")
head(nhanes)
names(bd.i)
nhanes <- bd.i$imp
head(nhanes)
nhanes[,1]
dim(nhanes)
names(nhanes)
dim(nhanes)
class(nhnanes)
class(nhanes)
nhanes[[1]]
nhanes[[2]]
cbind(nhanes[[2]], bd[,2])
names(nhanes)
names(bd.io)
names(bd.i)
dim(bd.i$predictorMatrix)
?mice
nhanes <- complete(bd.i)
dim(nhanes)
cbind(nhanes[[2]], bd[,2])
cbind(nhanes, bd[,2])
cbind(nhanes[,2], bd[,2])
bd.i.c <- complete(bd.i)
rm(nhanes)
nhanes
nhanes <- bd.i.c[o,]
o <- complete.cases(bd[,87:88])
nhanes <- bd.i.c[o,]
save(nhanes, file="nhanes.Rdata")
dim(nhanes)
names(nhanes)
nhanes.nut <- nhanes[,vars[!var%in%air]]
nhanes.nut <- nhanes[,vars[!vars%in%air]]
nhanes.air <- nhanes[,vars[!vars%in%nut]]
names(nhanes.nut)
names(nhanes.nut)
names(nhanes.air)
VarDescription[VarDescription$category=="volatile compounds",]
VarDescription[VarDescription$category=="volatile compounds",
c("var", "var_desc")]
princomp(nhanes.air)
names(nhanes.air)
princomp(nhanes.air[,1:51])
apply(nhanes.air[,1:51], 2, max)
princomp(nhanes.air[,1:51], na.rm=TRUE)
apply(nhanes.air[,1:51], 2, max, na.rm=TRUE)
bd.i.c <- complete(bd.i)
apply(bd.i.c[,1:51], 2, max, na.rm=TRUE)
o <- complete.cases(bd[,87:88])
nhanes <- bd.i.c[o,]
vars <- c(air, nut, "male", "education",
"BMXBMI", "RIDAGEYR",
"colon_cancer_self_report", "any_ht")
nhanes.nut <- nhanes[,vars[!vars%in%air]]
nhanes.air <- nhanes[,vars[!vars%in%nut]]
names(nhanes.nut)[34:37] <- c("BMI", "AGE", "COLON", "HT")
names(nhanes.air)[54:57] <- c("BMI", "AGE", "COLON", "HT")
a<princomp(nhanes.air[,1:51])
a<-princomp(nhanes.air[,1:51])
apply(nhanes.air[,1:51], 2, max, na.rm=TRUE)
apply(nhanes.air[,1:51], 2, max)
apply(nhanes[,1:51], 2, max)
apply(bd.i.c[,1:51], 2, max)
?complete
bd.i.c <- complete(bd.i)
apply(bd.i.c[,1:51], 2, max)
bd.i.c[,1]
bd.i.c[,7]
bd[,7]
apply(bd,2, function(x) all(is.na(x)))
bd[,7]
is.na(bd[,7])
any(!is.na(bd[,7]))
any(!is.na(bd[,1]))
mean(is.na(bd[,1]))
?mice
bd.i.c <- complete(bd.i)
any(!is.na(bd[,1]))
any(!is.na(bd.i.c[,1]))
any(!is.na(bd.i.c[,7]))
bd.i.c[,7]
bd[,7]
complete
?complete
bd.i.c <- complete(bd.i, action=1)
bd.i.c[,7]
apply(bd.i.c,2,function(x) mean(is.na(x))
)
class(bd.i.c)
dim(bd.i.c)
bd.i.c[,7]
lapply(bd.i.c,function(x) mean(is.na(x))
)
lapply(bd,function(x) mean(is.na(x))
)
lapply(bd,function(x) mean(is.na(x))
)
sapply(bd,function(x) mean(is.na(x))
)
sapply(bd.i.c,function(x) mean(is.na(x))
)
sapply(bd.i.c,function(x) any)(is.na(x))
sapply(bd.i.c,function(x) any(is.na(x)))
sapply(bd.i.c,function(x) all(is.na(x)))
sapply(bd.i.c,function(x) mean(is.na(x))>0)
sapply(bd.i.c,function(x) all(is.na(x)))
sapply(bd.i.c,function(x) any(is.na(x)))
sapply(bd.i.c,function(x) !any(is.na(x)))
sel <- sapply(bd.i.c,function(x) !any(is.na(x)))
bd.i.c2 <- bd.i.c[, sel]
o <- complete.cases(bd[,87:88])
nhanes <- bd.i.c[o,]
vars <- c(air, nut, "male", "education",
"BMXBMI", "RIDAGEYR",
"colon_cancer_self_report", "any_ht")
nhanes.nut <- nhanes[,vars[!vars%in%air]]
nhanes.air <- nhanes[,vars[!vars%in%nut]]
names(nhanes.nut)[34:37] <- c("BMI", "AGE", "COLON", "HT")
names(nhanes.air)[54:57] <- c("BMI", "AGE", "COLON", "HT")
sapply(bd.i.c,function(x) !any(is.na(x)))
a<princomp(nhanes.air[,1:51])
a<-princomp(nhanes.air[,1:51])
nhanes.air[1:30]
a<-princomp(nhanes.air[,1:31])
apply(nhanes.air[,1:31],2, function(x) mean(is.na(x))
)
apply(bd.i.c2,2, function(x) mean(is.na(x))
)
dim(nhames)
dim(nhanes)
apply(nhanes, 2, function(x) mean(is.na(x)))
nhanes <- bd.i.c2[o,]
vars <- c(air, nut, "male", "education",
"BMXBMI", "RIDAGEYR",
"colon_cancer_self_report", "any_ht")
nhanes.nut <- nhanes[,vars[!vars%in%air]]
devtools::install_github("isglobal-brge/survrec")
require(graphics)
data(USArrests)
head(USArrests)
princomp(USArrests)
mod <- princomp(USArrests)
summary(mod)
mod2 <- princomp(USArrests, cor=TRUE, scale=TRUE)
summary(mod2)
plot(mod2)
plot(mod2, type="lines")
mod3 <- ord(USArrests)
require(made4)
mod3 <- ord(USArrests)
mod3
plot(mod3)
dim(USArrests)
mod3 <- ord(t(USArrests))
plot(mod3)
plot(mod3, nlab=5)
?ord
data(khan)
ls()
khan
loadings(mod2)
data()
data(ChickWeight)
ChickWeight
data(crimtab)
dim(crimtab)
crimtab
data(lascaux)
lascaux
dim(lascaux)
class(lascaux)
?lascaux
mod <- ord(lascaux$morpho)
table(lascaux$riv)
data(maples)
maples
mod <- ord(maples$tab)
data(jv73)
jv73
data(chatcat)
dim(chatcat)
?chatcat
?dudi.pca
data(deug)
?deug
mod <- ord(deug$tab)
plot(mod)
mod <- ord(t(deug$tab))
plot(mod)
mod <- ord(t(deug$tab), classvec = deug$result)
plot(mod)
version()
R.version()
version
RStudio.Version()
getwd()
knitr::purl("unsupervised_methods.Rnw")
setwd("c:/Juan/CREAL/GitHub/biomarkers_multiple_tables")
setwd("c:/Juan/CREAL/GitHub/biomarkers_multiple_tables")
load("data_exercises/diet.Rdata")
names(X1)
names(X2)
names(X3)
X <- cbind(X2, X3)
dd <- dist(X)
dd.h <- hclust(dd)
plot(dd.h)
dd <- dist(X[-6995,])
dd.h <- hclust(dd)
plot(dd.h)
X.s <- scale(X)
dd <- dist(X.s)
dd.h <- hclust(dd)
plot(dd.h)
groups <- cutree(dd.h, 3)
table(groups3.hclust)
table(groups)
X <- cbind(X2, X3)
dd <- dist(X[-6995,])
dd.h <- hclust(dd)
plot(dd.h)
groups <- cutree(dd.h, 3)
table(groups)
dd <- dist(X)
dd.h <- hclust(dd)
plot(dd.h)
groups <- cutree(dd.h, 3)
table(groups)
?plot.hclust
dd.h <- hclust(dd, method="median")
plot(dd.h)
plot(dd.h, labels=NULL)
plot(dd.h, labels=FALSE)
X <- cbind(X2, X3)
dd <- dist(X)
dd.h <- hclust(dd, method="median")
plot(dd.h, labels=FALSE)
groups <- cutree(dd.h, 3)
table(groups)
X <- cbind(X2, X3)
dd <- dist(X)
dd.h <- hclust(dd)
plot(dd.h, labels=FALSE)
groups <- cutree(dd.h, 3)
table(groups)
mod <- glm(X1$cascoc ~ groups, family="binomial")
names(X1
)
mod <- glm(X1$casoc ~ groups, family="binomial")
summary(mod)
mod <- glm(X1$casoc ~ groups + peso + peso, family="binomial")
mod <- glm(casoc ~ groups + peso + peso, data=X1, family="binomial")
summary(mod)
mod <- glm(casoc ~ groups + peso + sexo, data=X1, family="binomial")
summary(mod)
mod <- glm(casoc ~ as.factor(groups) + peso + sexo, data=X1, family="binomial")
summary(mod)
names(X1)
mod <- glm(casoc ~ as.factor(groups) + peso + sexo + Colesterol,
data=X1, family="binomial")
summary(mod)
groups
table(groups)
library(clValid)
val.intern <- clValid(dd, 2:6, clMethods = c("hierarchical",
"kmeans", "diana",
"pam",  "model"),
validation = "internal")
dim(dd)
val.intern <- clValid(X, 2:6, clMethods = c("hierarchical",
"kmeans", "diana",
"pam",  "model"),
validation = "internal")
val.intern <- clValid(X, 2:4, clMethods = c("hierarchical",
"kmeans"),
validation = "internal")
plot(silhouette(cutree(dd.h,3), dd))
plot(silhouette(cutree(dd.h,2), dd))
plot(silhouette(cutree(dd.h,4), dd))
plot(silhouette(cutree(dd.h,3), dd))
mm <- compareGroups(groups ~ ., X)
library(compareGroups)
mm <- compareGroups(groups ~ ., X)
X$groups <- as.factor(groups)
mm <- compareGroups(groups ~ ., X)
createTable(mm)
mod <- ord(X, classvec = groups)
library(made4)
mod <- ord(X, classvec = groups)
library(impute)
?impute
?impute.knn
X.imp <- impute.knn(t(X)$data
mod <- ord(X, classvec = groups)
library(compareGroups)
X$groups <- as.factor(groups)
mm <- compareGroups(groups ~ ., X)
createTable(mm)
X.imp <- impute.knn(t(X)$data
mod <- ord(X, classvec = groups)
library(compareGroups)
X$groups <- as.factor(groups)
mm <- compareGroups(groups ~ ., X)
createTable(mm)
X.imp <- impute.knn(t(X))$data
mod <- ord(X, classvec = groups)
mod <- ord(X.imp, classvec = groups)
plot(mod)
groups
groups <- as.factor(cutree(dd.h, 3))
mod <- ord(X.imp, classvec = groups)
plot(mod, nlab=3)
system("pdflatex supervised_methods.tex")
search()
# Chunk 1: setup
options(width = 80)
library(knitr)
opts_chunk$set(tidy=FALSE, size='footnotesize', warning=FALSE, cache=TRUE,
message=FALSE, fig.align='center', out.width='2in')
# Chunk 2: data2
library(pdfCluster)
data(oliveoil)
head(oliveoil)
# Chunk 3: dataTT
set.seed(1234)
ss <- sample(1:nrow(oliveoil), 200)
train <- oliveoil[-ss,-2]
test <- oliveoil[ss,-2]
# Chunk 4: lda
library(MASS)
olive.lda <- lda(macro.area~., train)
pregion.lda <- predict(olive.lda, test)$class
table(test[,1], pregion.lda)
# Chunk 5: ldaPlot
plot(predict(olive.lda, test)$x,
col=as.numeric(test[,1]))
# Chunk 6: trees
library(rpart)
olive.rp <- rpart(macro.area~., train,
method="class")
olive.rp
# Chunk 7: treesPlot
plot(olive.rp)
text(olive.rp)
# Chunk 8: ldaPredict
temp <- predict(olive.rp, test)
head(temp)
pregion.rp <- apply(temp, 1, function(x) which(x==1))
# Chunk 9: ldaPredict2
table(test[,1], pregion.rp)
# Chunk 10: svm
library(e1071)
olive.svm <-  svm(macro.area ~. , data = train)
pregion.svm <- predict(olive.svm, test)
table(test[,1], pregion.svm)
# Chunk 11: nnet
library(nnet)
olive.nnet <-  nnet(macro.area ~. , data = train,
size=2)
pregion.nnet <- predict(olive.nnet, test, type="class")
table(test[,1], pregion.nnet)
# Chunk 12: nnet2
olive.nnet <-  nnet(macro.area ~. , data = train,
size=4)
pregion.nnet <- predict(olive.nnet, test, type="class")
table(test[,1], pregion.nnet)
# Chunk 13: boost
library(adabag)
olive.boost <-  boosting(macro.area ~. , data = train,
control = rpart.control(maxdepth = 2))
pregion.boost <- predict(olive.boost, test, type="class")
table(test[,1], pregion.boost)
# Chunk 14: rf
library(randomForest)
olive.rf <-  randomForest(macro.area ~. , data = train)
pregion.rf <- predict(olive.rf, test, type="class")
table(test[,1], pregion.rf)
# Chunk 15: perf
library(flexclust)
randIndex(test[,1], pregion.rf)
randIndex(test[,1], pregion.lda)
randIndex(test[,1], pregion.rp)
# Chunk 16: ROC_1
library(pROC)
data(aSAH)
head(aSAH)
# Chunk 17: ROC_2
rocobj <- plot.roc(aSAH$outcome, aSAH$s100b,
main="Confidence intervals",
percent=TRUE,
ci=TRUE,
print.auc=TRUE)
# Chunk 18: ROC_3
rocobj <- plot.roc(aSAH$outcome, aSAH$s100b,
main="Confidence intervals", percent=TRUE,
ci=TRUE,
print.auc=TRUE)
ciobj <- ci.se(rocobj, progress = "none",
specificities=seq(0, 100, 5)) #This can be selected (grid for computing bands)
plot(ciobj, type="shape", col="lightblue") # plot as a blue shape
# Chunk 19: compareAUC
rocobj1 <- plot.roc(aSAH$outcome, aSAH$s100,
main="Statistical comparison", percent=TRUE, col="blue")
rocobj2 <- lines.roc(aSAH$outcome, aSAH$ndka, percent=TRUE, col="red")
testobj <- roc.test(rocobj1, rocobj2)
text(50, 50, labels=paste("p-value =", format.pval(testobj$p.value)), adj=c(0, .5))
legend("bottomright", legend=c("S100B", "NDKA"), col=c("blue", "red"), lwd=2)
table(test[,1], pregion.boost)
pregion.boost
pregion.boost <- predict(olive.boost, test, type="class")$class
table(test[,1], pregion.boost)
table(test[,1], pregion.rf)
pregion.boost
table(test[,1], pregion.boost)
pregion.rp
pregion.boost <- predict(olive.boost, test, type="class")
names(pregion.boost)
?randIndex
randIndex(table(test[,1], pregion.boost))
pregion.boost <- predict(olive.boost, test, type="class")$class
randIndex(table(test[,1], pregion.boost))
table(test[,1], pregion.boost)
knitr::purl("Day2-supervised_methods/supervised_methods.Rnw")
setwd("c:/Juan/CREAL/GitHub/biomarkers_multiple_tables/")
diet <- read.dta13("data_exercises/diet.dta")
library(readstata13)
setwd("c:/Juan/CREAL/GitHub/biomarkers_multiple_tables/")
diet <- read.dta13("data_exercises/diet.dta")
dim(diet)
diet$tipocancer
set.seed(12345)
sel <- sample(1:nrow(diet), 4000)
train <- diet[sel, ]
test <- diet[-sel,]
